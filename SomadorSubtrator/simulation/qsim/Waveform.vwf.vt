// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/02/2023 23:32:58"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          SomadorSubtrator
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module SomadorSubtrator_vlg_vec_tst();
// constants                                           
// general purpose registers
reg A0;
reg A1;
reg A2;
reg A3;
reg A4;
reg A5;
reg A6;
reg A7;
reg Eu;
reg INPUT0;
reg INPUT1;
reg INPUT2;
reg INPUT3;
reg INPUT4;
reg INPUT5;
reg INPUT6;
reg INPUT7;
reg Su;
// wires                                               
wire C0;
wire S0;
wire S1;
wire S2;
wire S3;
wire S4;
wire S5;
wire S6;
wire S7;

// assign statements (if any)                          
SomadorSubtrator i1 (
// port map - connection between master ports and signals/registers   
	.A0(A0),
	.A1(A1),
	.A2(A2),
	.A3(A3),
	.A4(A4),
	.A5(A5),
	.A6(A6),
	.A7(A7),
	.C0(C0),
	.Eu(Eu),
	.INPUT0(INPUT0),
	.INPUT1(INPUT1),
	.INPUT2(INPUT2),
	.INPUT3(INPUT3),
	.INPUT4(INPUT4),
	.INPUT5(INPUT5),
	.INPUT6(INPUT6),
	.INPUT7(INPUT7),
	.S0(S0),
	.S1(S1),
	.S2(S2),
	.S3(S3),
	.S4(S4),
	.S5(S5),
	.S6(S6),
	.S7(S7),
	.Su(Su)
);
initial 
begin 
#1000000 $finish;
end 

// A0
initial
begin
	A0 = 1'b1;
	A0 = #60000 1'b0;
	A0 = #120000 1'b1;
	A0 = #120000 1'b0;
	A0 = #60000 1'b1;
	A0 = #180000 1'b0;
	A0 = #30000 1'b1;
	A0 = #90000 1'b0;
	A0 = #60000 1'b1;
	A0 = #60000 1'b0;
	A0 = #30000 1'b1;
	A0 = #30000 1'b0;
	A0 = #30000 1'b1;
end 

// A1
initial
begin
	A1 = 1'b1;
	A1 = #30000 1'b0;
	A1 = #90000 1'b1;
	A1 = #30000 1'b0;
	A1 = #60000 1'b1;
	A1 = #30000 1'b0;
	A1 = #60000 1'b1;
	A1 = #60000 1'b0;
	A1 = #60000 1'b1;
	A1 = #30000 1'b0;
	A1 = #150000 1'b1;
	A1 = #120000 1'b0;
	A1 = #30000 1'b1;
	A1 = #30000 1'b0;
	A1 = #30000 1'b1;
	A1 = #60000 1'b0;
	A1 = #30000 1'b1;
	A1 = #60000 1'b0;
end 

// A2
initial
begin
	A2 = 1'b1;
	A2 = #60000 1'b0;
	A2 = #90000 1'b1;
	A2 = #30000 1'b0;
	A2 = #150000 1'b1;
	A2 = #30000 1'b0;
	A2 = #30000 1'b1;
	A2 = #30000 1'b0;
	A2 = #30000 1'b1;
	A2 = #30000 1'b0;
	A2 = #30000 1'b1;
	A2 = #150000 1'b0;
	A2 = #60000 1'b1;
	A2 = #30000 1'b0;
	A2 = #90000 1'b1;
end 

// A3
initial
begin
	A3 = 1'b0;
	A3 = #90000 1'b1;
	A3 = #30000 1'b0;
	A3 = #30000 1'b1;
	A3 = #30000 1'b0;
	A3 = #60000 1'b1;
	A3 = #60000 1'b0;
	A3 = #60000 1'b1;
	A3 = #60000 1'b0;
	A3 = #30000 1'b1;
	A3 = #30000 1'b0;
	A3 = #210000 1'b1;
	A3 = #210000 1'b0;
	A3 = #30000 1'b1;
	A3 = #30000 1'b0;
	A3 = #30000 1'b1;
end 

// A4
initial
begin
	A4 = 1'b0;
	A4 = #60000 1'b1;
	A4 = #60000 1'b0;
	A4 = #30000 1'b1;
	A4 = #60000 1'b0;
	A4 = #60000 1'b1;
	A4 = #30000 1'b0;
	A4 = #60000 1'b1;
	A4 = #30000 1'b0;
	A4 = #60000 1'b1;
	A4 = #60000 1'b0;
	A4 = #30000 1'b1;
	A4 = #30000 1'b0;
	A4 = #150000 1'b1;
	A4 = #210000 1'b0;
end 

// A5
initial
begin
	A5 = 1'b1;
	A5 = #30000 1'b0;
	A5 = #30000 1'b1;
	A5 = #30000 1'b0;
	A5 = #90000 1'b1;
	A5 = #60000 1'b0;
	A5 = #30000 1'b1;
	A5 = #30000 1'b0;
	A5 = #60000 1'b1;
	A5 = #30000 1'b0;
	A5 = #90000 1'b1;
	A5 = #30000 1'b0;
	A5 = #30000 1'b1;
	A5 = #90000 1'b0;
	A5 = #60000 1'b1;
	A5 = #90000 1'b0;
	A5 = #30000 1'b1;
	A5 = #60000 1'b0;
end 

// A6
initial
begin
	A6 = 1'b1;
	A6 = #90000 1'b0;
	A6 = #120000 1'b1;
	A6 = #90000 1'b0;
	A6 = #90000 1'b1;
	A6 = #30000 1'b0;
	A6 = #30000 1'b1;
	A6 = #30000 1'b0;
	A6 = #60000 1'b1;
	A6 = #30000 1'b0;
	A6 = #60000 1'b1;
	A6 = #60000 1'b0;
	A6 = #30000 1'b1;
	A6 = #60000 1'b0;
	A6 = #90000 1'b1;
	A6 = #60000 1'b0;
	A6 = #30000 1'b1;
	A6 = #30000 1'b0;
end 

// A7
initial
begin
	A7 = 1'b0;
	A7 = #60000 1'b1;
	A7 = #120000 1'b0;
	A7 = #30000 1'b1;
	A7 = #30000 1'b0;
	A7 = #60000 1'b1;
	A7 = #270000 1'b0;
	A7 = #30000 1'b1;
	A7 = #30000 1'b0;
	A7 = #30000 1'b1;
	A7 = #60000 1'b0;
	A7 = #90000 1'b1;
	A7 = #30000 1'b0;
	A7 = #90000 1'b1;
end 

// INPUT0
initial
begin
	INPUT0 = 1'b0;
	INPUT0 = #30000 1'b1;
	INPUT0 = #60000 1'b0;
	INPUT0 = #60000 1'b1;
	INPUT0 = #30000 1'b0;
	INPUT0 = #30000 1'b1;
	INPUT0 = #30000 1'b0;
	INPUT0 = #30000 1'b1;
	INPUT0 = #30000 1'b0;
	INPUT0 = #150000 1'b1;
	INPUT0 = #30000 1'b0;
	INPUT0 = #90000 1'b1;
	INPUT0 = #30000 1'b0;
	INPUT0 = #30000 1'b1;
	INPUT0 = #30000 1'b0;
	INPUT0 = #120000 1'b1;
	INPUT0 = #30000 1'b0;
	INPUT0 = #30000 1'b1;
	INPUT0 = #60000 1'b0;
	INPUT0 = #30000 1'b1;
	INPUT0 = #30000 1'b0;
	INPUT0 = #30000 1'b1;
end 

// INPUT1
initial
begin
	INPUT1 = 1'b1;
	INPUT1 = #90000 1'b0;
	INPUT1 = #60000 1'b1;
	INPUT1 = #90000 1'b0;
	INPUT1 = #60000 1'b1;
	INPUT1 = #60000 1'b0;
	INPUT1 = #60000 1'b1;
	INPUT1 = #30000 1'b0;
	INPUT1 = #30000 1'b1;
	INPUT1 = #30000 1'b0;
	INPUT1 = #30000 1'b1;
	INPUT1 = #120000 1'b0;
	INPUT1 = #120000 1'b1;
	INPUT1 = #90000 1'b0;
end 

// INPUT2
initial
begin
	INPUT2 = 1'b1;
	INPUT2 = #90000 1'b0;
	INPUT2 = #120000 1'b1;
	INPUT2 = #60000 1'b0;
	INPUT2 = #30000 1'b1;
	INPUT2 = #30000 1'b0;
	INPUT2 = #30000 1'b1;
	INPUT2 = #30000 1'b0;
	INPUT2 = #60000 1'b1;
	INPUT2 = #30000 1'b0;
	INPUT2 = #30000 1'b1;
	INPUT2 = #30000 1'b0;
	INPUT2 = #30000 1'b1;
	INPUT2 = #30000 1'b0;
	INPUT2 = #30000 1'b1;
	INPUT2 = #60000 1'b0;
	INPUT2 = #30000 1'b1;
	INPUT2 = #60000 1'b0;
	INPUT2 = #60000 1'b1;
	INPUT2 = #30000 1'b0;
	INPUT2 = #30000 1'b1;
	INPUT2 = #60000 1'b0;
end 

// INPUT3
initial
begin
	INPUT3 = 1'b1;
	INPUT3 = #30000 1'b0;
	INPUT3 = #30000 1'b1;
	INPUT3 = #30000 1'b0;
	INPUT3 = #180000 1'b1;
	INPUT3 = #60000 1'b0;
	INPUT3 = #30000 1'b1;
	INPUT3 = #90000 1'b0;
	INPUT3 = #60000 1'b1;
	INPUT3 = #30000 1'b0;
	INPUT3 = #30000 1'b1;
	INPUT3 = #90000 1'b0;
	INPUT3 = #30000 1'b1;
	INPUT3 = #30000 1'b0;
	INPUT3 = #30000 1'b1;
	INPUT3 = #60000 1'b0;
	INPUT3 = #60000 1'b1;
	INPUT3 = #60000 1'b0;
end 

// INPUT4
initial
begin
	INPUT4 = 1'b0;
	INPUT4 = #60000 1'b1;
	INPUT4 = #30000 1'b0;
	INPUT4 = #60000 1'b1;
	INPUT4 = #30000 1'b0;
	INPUT4 = #30000 1'b1;
	INPUT4 = #30000 1'b0;
	INPUT4 = #90000 1'b1;
	INPUT4 = #30000 1'b0;
	INPUT4 = #30000 1'b1;
	INPUT4 = #60000 1'b0;
	INPUT4 = #180000 1'b1;
	INPUT4 = #60000 1'b0;
	INPUT4 = #30000 1'b1;
	INPUT4 = #30000 1'b0;
	INPUT4 = #90000 1'b1;
end 

// INPUT5
initial
begin
	INPUT5 = 1'b1;
	INPUT5 = #120000 1'b0;
	INPUT5 = #240000 1'b1;
	INPUT5 = #30000 1'b0;
	INPUT5 = #30000 1'b1;
	INPUT5 = #60000 1'b0;
	INPUT5 = #60000 1'b1;
	INPUT5 = #150000 1'b0;
	INPUT5 = #30000 1'b1;
	INPUT5 = #60000 1'b0;
	INPUT5 = #30000 1'b1;
	INPUT5 = #60000 1'b0;
	INPUT5 = #60000 1'b1;
	INPUT5 = #30000 1'b0;
end 

// INPUT6
initial
begin
	INPUT6 = 1'b0;
	INPUT6 = #60000 1'b1;
	INPUT6 = #60000 1'b0;
	INPUT6 = #120000 1'b1;
	INPUT6 = #60000 1'b0;
	INPUT6 = #210000 1'b1;
	INPUT6 = #30000 1'b0;
	INPUT6 = #120000 1'b1;
	INPUT6 = #120000 1'b0;
	INPUT6 = #90000 1'b1;
	INPUT6 = #60000 1'b0;
	INPUT6 = #30000 1'b1;
	INPUT6 = #30000 1'b0;
end 

// INPUT7
initial
begin
	INPUT7 = 1'b1;
	INPUT7 = #30000 1'b0;
	INPUT7 = #90000 1'b1;
	INPUT7 = #30000 1'b0;
	INPUT7 = #60000 1'b1;
	INPUT7 = #60000 1'b0;
	INPUT7 = #120000 1'b1;
	INPUT7 = #30000 1'b0;
	INPUT7 = #30000 1'b1;
	INPUT7 = #120000 1'b0;
	INPUT7 = #30000 1'b1;
	INPUT7 = #30000 1'b0;
	INPUT7 = #60000 1'b1;
	INPUT7 = #30000 1'b0;
	INPUT7 = #30000 1'b1;
	INPUT7 = #30000 1'b0;
	INPUT7 = #30000 1'b1;
	INPUT7 = #60000 1'b0;
	INPUT7 = #30000 1'b1;
	INPUT7 = #30000 1'b0;
end 

// Eu
initial
begin
	Eu = 1'b1;
end 

// Su
initial
begin
	repeat(16)
	begin
		Su = 1'b0;
		Su = #30000 1'b1;
		# 30000;
	end
	Su = 1'b0;
	Su = #30000 1'b1;
end 
endmodule

