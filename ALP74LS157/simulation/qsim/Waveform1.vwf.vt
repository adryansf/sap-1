// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/23/2023 09:23:15"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ALP74LS157
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ALP74LS157_vlg_vec_tst();
// constants                                           
// general purpose registers
reg 0a;
reg 0b;
reg 0c;
reg 0d;
reg 1a;
reg 1b;
reg 1c;
reg 1d;
reg E;
reg S;
// wires                                               
wire a;
wire b;
wire c;
wire d;

// assign statements (if any)                          
ALP74LS157 i1 (
// port map - connection between master ports and signals/registers   
	.\0a (0a),
	.\0b (0b),
	.\0c (0c),
	.\0d (0d),
	.\1a (1a),
	.\1b (1b),
	.\1c (1c),
	.\1d (1d),
	.a(a),
	.b(b),
	.c(c),
	.d(d),
	.E(E),
	.S(S)
);
initial 
begin 
#1000000 $finish;
end 
endmodule

